name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Checkout du code
      - name: Checkout code
        uses: actions/checkout@v3

      # Étape 2: Configurer Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # Étape 3: Installer les dépendances
      - name: Install dependencies
        run: npm install

      # Étape 4: Lancer les tests
      - name: Run tests
        run: npm test

      # Étape 5: Construire l'image Docker
      - name: Build Docker image
        run: |
          docker build -t my-app .

      # Étape 6: Push Docker image to Docker Hub
      - name: Push to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
          docker tag my-app:latest ${DOCKER_USERNAME}/my-app:latest
          docker push ${DOCKER_USERNAME}/my-app:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      # Étape 1: Connectez-vous au serveur EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_PRIVATE_KEY }}
          port: 22
          script: |
            docker pull ${DOCKER_USERNAME}/my-app:latest
            docker stop my-app || true
            docker rm my-app || true
            docker run -d --name my-app -p 3001:3001 ${DOCKER_USERNAME}/my-app:latest
